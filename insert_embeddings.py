import oracledb
from sentence_transformers import SentenceTransformer
import numpy as np
import textwrap

# Configuración de conexión
ORACLE_USER = "miguel"
ORACLE_PASSWORD = "NuevaClave123"
ORACLE_DSN = "localhost:1521/FREEPDB1"

# Inicializar modelo de embeddings
model = SentenceTransformer("all-MiniLM-L6-v2")

# Conectar a Oracle
conn = oracledb.connect(user=ORACLE_USER, password=ORACLE_PASSWORD, dsn=ORACLE_DSN)
cursor = conn.cursor()

# Eliminar tabla si existe
cursor.execute("BEGIN EXECUTE IMMEDIATE 'DROP TABLE documents'; EXCEPTION WHEN OTHERS THEN NULL; END;")

# Crear tabla con `BLOB` para almacenar embeddings de fragmentos de texto
cursor.execute("""
CREATE TABLE documents (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    filename VARCHAR2(255),
    fragment_number NUMBER,
    content CLOB,
    embedding BLOB
)
""")

# Cargar texto extraído
with open("extracted_text.txt", "r", encoding="utf-8") as f:
    content = f.read().split("### ")

# Insertar fragmentos en la base
for doc in content:
    if not doc.strip():
        continue
    lines = doc.strip().split("\n")
    filename = lines[0].strip()
    full_text = "\n".join(lines[1:])
    
    # Dividir el texto en fragmentos de 512 caracteres
    fragments = textwrap.wrap(full_text, 512)

    for i, fragment in enumerate(fragments):
        # Generar embedding para el fragmento
        embedding = model.encode(fragment).astype(np.float32)

        # Verificar que el embedding no esté vacío
        if embedding.shape[0] == 0:
            print(f"⚠️ Error: El embedding del fragmento {i} de {filename} está vacío. Omitiendo...")
            continue

        print(f"✅ Embedding generado para {filename}, fragmento {i}, dimensiones: {embedding.shape[0]}")

        # Convertir embedding a formato BLOB
        embedding_blob = oracledb.Binary(embedding.tobytes())

        cursor.execute("""
        INSERT INTO documents (filename, fragment_number, content, embedding) 
        VALUES (:1, :2, :3, :4)
        """, (filename, i, fragment, embedding_blob))

conn.commit()
print("✅ Embeddings insertados en Oracle Database 23ai Free en fragmentos pequeños.")
cursor.close()
conn.close()

